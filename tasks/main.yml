---
- block:

  - name: install shell
    package:
      name: "{{ user_setup_shell | basename }}"
      state: present

  - name: create group
    group:
      name: "{{ user_setup_group }}"
      gid: "{{ user_setup_gid }}"
    when:
      - user_setup_group != "root"
      - user_setup_gid is defined

  - name: create group
    group:
      name: "{{ user_setup_group }}"
    when:
      - user_setup_group != "root"
      - user_setup_gid is not defined

  - name: create user
    user:
      name: "{{ user_setup_username }}"
      group: "{{ user_setup_group }}"
      shell: "{{ user_setup_shell }}"
      home: "{{ user_setup_home }}"
      uid: "{{ user_setup_uid }}"
    when:
      - user_setup_username != "root"
      - user_setup_uid is defined

  - name: create user
    user:
      name: "{{ user_setup_username }}"
      group: "{{ user_setup_group }}"
      shell: "{{ user_setup_shell }}"
      home: "{{ user_setup_home }}"
    when:
      - user_setup_username != "root"
      - user_setup_uid is not defined

  - name: create standard dirs
    file:
      state: directory
      path: "{{ user_setup_home }}/{{ item }}"
    loop:
      - ".config"
      - ".local/bin"
      - ".local/lib"
      - ".local/share"

  - name: stat ~/.config/aliases
    stat:
      path: "{{ user_setup_home }}/.config/aliases"
    register: home_config_aliases

  - name: create ~/.config/aliases if missing
    file:
      state: touch
      path: "{{ user_setup_home }}/.config/aliases"
    when:
      - home_config_aliases.exists is not defined

  - name: stat ~/.config/vars
    stat:
      path: "{{ user_setup_home }}/.config/vars"
    register: home_config_vars

  - name: create ~/.config/vars if missing
    file:
      state: touch
      path: "{{ user_setup_home }}/.config/vars"
    when:
      - home_config_vars.exists is not defined

  - name: stat ~/.gitignore
    stat:
      path: "{{ user_setup_home }}/.gitignore"
    register: home_gitignore

  - name: create ~/.config/vars if missing
    file:
      state: touch
      path: "{{ user_setup_home }}/.gitignore"
    when:
      - home_gitignore.exists is not defined

  - name: setup standard files
    lineinfile:
      path: "{{ item.path }}"
      state: present
      regexp: "^{{ item.line }}"
      line: "{{ item.line }}"
    loop:
      - path: "{{ user_setup_home }}/.bashrc"
        line: "if [ -f ~/.config/aliases ]; then source ~/.config/aliases; fi"
      - path: "{{ user_setup_home }}/.bashrc"
        line: "if [ -f ~/.config/vars ]; then source ~/.config/vars; fi"
      - path: "{{ user_setup_home }}/.config/aliases"
        line: "alias dotgit='/usr/bin/git --git-dir=${HOME}/.config/dotfiles/ --work-tree=${HOME}'"
      - path: "{{ user_setup_home }}/.config/vars"
        line: 'export PATH="${PATH}:${HOME}/.local/bin"'
      - path: "{{ user_setup_home }}/.gitignore"
        line: "${HOME}/.config/dotfiles"

  - block:

      - name: install git
        package:
          name: git
          state: present

      - name: clone oh-my-zsh for zsh users
        git:
          repo: "https://github.com/ohmyzsh/ohmyzsh.git"
          dest: "/usr/local/share/oh-my-zsh"
          clone: true
          update: true

    when:
      - user_setup_shell | basename == "zsh"

  become: true
  become_user: root
  tags:
    - user_setup
